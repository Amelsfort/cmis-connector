<?xml version="1.0" encoding="UTF-8"?>
<!--

    Mule CMIS Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
       xmlns:cmis="http://www.mulesoft.org/schema/mule/cmis"
       xmlns:http="http://www.mulesoft.org/schema/mule/http"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/cmis    http://www.mulesoft.org/schema/mule/cmis/1.2/mule-cmis.xsd
       http://www.mulesoft.org/schema/mule/core    http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
       ">
       
	<!-- the id of the last change saw in the repository. Alfresco use integers -->
	<global-property name="cmis.repository.base"
		value="http://cmis.alfresco.com/service/cmis" />
	<global-property name="cmis.repository.id"
		value="371554cd-ac06-40ba-98b8-e6b60275cca7" />
	<global-property name="cmis.demo.baseDirectory"
		value="/mule-cloud-connector/demo2" />

	<!-- configuration! -->
	<cmis:config name="alfresco" username="admin" password="admin"
		         baseUrl="${cmis.repository.base}" repositoryId="${cmis.repository.id}" />
	<http:connector name="HttpConnector" enableCookies="true" keepAlive="true" />
    <custom-transformer name="HttpRequestBodyToParamMap" class="org.mule.transport.http.transformers.HttpRequestBodyToParamMap" />
	
	<flow name="cmisDemo2">
	    <description>
	       1. Listens to HttpRequests, expecting the following parameters:
	           * fileName: name of the file to modify in the CMS
	           * pastieId: Id of a pastie.org element.
	           * checkInComment: description of the text file. 
	       2. Downloads the text file.
	       3. Checks out the document in the CMIS
	       4. Checks in the document with the new content.
	    </description>
		<http:inbound-endpoint host="localhost" port="9091" path="update-file" />
		<transformer ref="HttpRequestBodyToParamMap"/>
		<flow-ref name="updateDocumentFlow" />
	</flow>

    <flow name="updateDocumentFlow">
		<enricher target="#[header:session:pastieId]">
			<expression-transformer>
				<return-argument evaluator="string" expression="#[map-payload:pastieId]" />
			</expression-transformer>
		</enricher>
	     <enricher target="#[header:session:fileName]">
            <expression-transformer>
                <return-argument evaluator="string" expression="#[map-payload:fileName]" />
            </expression-transformer>
        </enricher>
        <enricher target="#[header:session:filePath]">
            <expression-transformer>
                <return-argument evaluator="string" expression="${cmis.demo.baseDirectory}/#[header:session:fileName]" />
            </expression-transformer>
        </enricher>
        
        <cmis:get-object-by-path path="#[header:session:filePath]"/>
        
        <choice>
            <when evaluator="groovy" expression="payload instanceof org.mule.transport.NullPayload">
                <flow-ref name="createDocumentFlow"/>
            </when>
            <otherwise>
                <flow-ref name="checkOutDocumentFlow" />
            </otherwise>
        </choice>
        
    </flow>

    <flow name="checkOutDocumentFlow">
        <enricher target="#[header:session:checkoutId]" source="#[ognl:id]">
            <cmis:check-out document="#[payload]" />
        </enricher>
        <flow-ref name="getPastieFlow"/>
        <cmis:check-in checkinComment="File modification" documentId="#[header:session:checkoutId]"
                       content="#[message]" filename="#[header:session:fileName]"
                       major="true" mimeType="text/html" />
        <expression-transformer>
            <return-argument evaluator="string" expression="Update successful" />
        </expression-transformer>
    </flow>


    <flow name="createDocumentFlow">
        <flow-ref name="getPastieFlow"/>
        <cmis:create-document-by-path filename="#[header:session:fileName]" content="#[message]" 
            folderPath="${cmis.demo.baseDirectory}" mimeType="text/html" objectType="cmis:document" versioningState="NONE" /> 
	    <expression-transformer>
	            <return-argument evaluator="string" expression="Document created" />
	    </expression-transformer>
    </flow>


    <flow name="getPastieFlow">
        <http:outbound-endpoint host="www.pastie.org" path="pastes/#[header:session:pastieId]/text" port="80" method="GET">
            <!-- 
                The following is a work around for a bug in the outbound endpoint, which
                causes Mule to send POST requests even if the specified method is GET.
             -->
            <message-properties-transformer>
                <add-message-property key="http.method" value="GET" />
            </message-properties-transformer>
        </http:outbound-endpoint>
    </flow>

</mule>
